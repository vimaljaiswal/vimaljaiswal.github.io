<?xml version="1.0" encoding="UTF-8"?>
<!--
`<HTMLWidget>` is the top level element which all other elements
will be a child of. It contains the attributes for the widget as
a whole.
developed by: vimal jaiswal
-->
<HTMLWidget name="Responsive Composition" formatNumber="6"  localization="none" creator="Adobe Muse Team" minWidth="153" defaultWidth="153" defaultHeight="39">
<!-- ! -->
	<parameters>
<info 
label="GuideLines:
1: Use 'fitWidth' on first element of composition widget for stacked and scattered.
2: Use 'popupContainer_expo' in case of lightBox.
2: Height is not responsive.
3: All composition widgets used will become responsive.
4: Input the breakpoints value used."
/>


<!--
maximum breakpoint
-->
<text name="myTextBox" defaultValue="[414,768,970]" label="Used Breakpoints:" toolTip="Enter the breakpoints used."multiline="false" />

<!--
`width` is the width of the pageitem within Muse
-->
		<builtIn name="width"/>
<!--
`height` is the height of the pageitem within Muse
-->
		<builtIn name="height"/>
<!--
`itemUID` is the unique ID for this page item. It can be used as a CSS selector to limit CSS styling to just this widget.
-->
		<builtIn name="itemUID"/>
<!-- ! -->



	</parameters>
	



<!--
`headHTML` is HTML which will be injected into the <head> tag by Muse during output.
This widget includes some CSS styling in the <head>, targetted to just the elements inside this widget.
-->


       

<bodyEndHTML>


<![CDATA[
<script type="text/javascript">
console.log({param_myTextBox});
var museInput = {param_myTextBox};

!function(){function t(t){for(var e=0;e<t.length-1;e++)m.push(t[e]);m.push(5e3)}function e(t){var e={};for(e.min=320,e.max=t[0],e.func=a,g.push(e),i=0;i<t.length-1;i++){var r={};r.min=t[i]+1,r.max=t[i+1],r.func=a,g.push(r)}jsonString=JSON.stringify(g),f=g[0].min}function r(){var t,e=document.querySelector("div.breakpoint.active"),i=e.getAttribute("data-max-width");return t=void 0==i?museInput[museInput.length-1]:i}function n(){var t;return function(){for(var e,i,r,n=window.innerWidth,o=0;o<g.length;o++)if(e=g[o],i=e.min||Number.MIN_VALUE,r=e.max||Number.MAX_VALUE,n>i&&r>n&&t!==e)for(t=e,j=0;j<m.length;j++)if(m[j]==r){var l=m.indexOf(m[j]);return m.splice(l,1),e.func.call(e)}}}function o(t){for(var e=0;e<t.length;e++)for(var i=0;i<t[e].length;i++){var r=t[e][i].querySelectorAll("div");if(document.querySelector("div.breakpoint.active div[title='fitWidth']")||document.querySelector("div.LightboxContent div[title='popupContainer_expo']"))for(var n=0;n<r.length;n++){var o=r[n].getAttribute("initailW"),l=r[n].getAttribute("initaill");if(void 0!=o){if("%"===o.slice(-1))var a=parseFloat(o,10)*u+"%";else var a=parseFloat(o,10)*u/100+"px";r[n].style.width=a}if(void 0!=l){if("%"===l.slice(-1)){var v=parseFloat(l,10)*u;r[n].style.left=v+"%"}if("auto"==l)r[n].style.left=l;else{var v=parseFloat(l,10)*u/100;r[n].style.left=v+"px"}}}}}function l(t){for(var e=0;e<t.length;e++)for(var i=0;i<t[e].length;i++)for(var r=t[e][i].querySelectorAll("div"),n=0;n<r.length;n++){var o=r[n];if(!r[n].getAttribute("class").match(/[\w-]*shared_content[\w-]*/g)&&!r[n].getAttribute("class").match(/[\w-]*ListThumb[\w-]*/g)){style=window.getComputedStyle(o);var l=style.getPropertyValue("left"),a=style.getPropertyValue("width");void 0!=a&&o.setAttribute("initailW",a),void 0!=l&&o.setAttribute("initaill",l)}}}function a(){setTimeout(function(){p=window.innerWidth,d=r(),u=p/d*100;var t=document.querySelector("div.breakpoint.active");c=t.querySelector("div.clearfix.borderbox"),v=t.querySelectorAll("div.PamphletWidget"),s=document.querySelectorAll("div.LightboxContent"),c.style.position="relative",l([v,s]),o([v,s])},h)}window.addEventListener("load",function(){var i=setInterval(function(){window.Muse.assets.checked&&(t(museInput),e(m),n()(),clearInterval(i))},0)}),window.addEventListener("resize",n());var u,v,d,c,s,f,h=500,g=[],p=window.innerWidth,m=[]}();

</script>


]]>
</bodyEndHTML>


</HTMLWidget>
